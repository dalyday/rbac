from django.template import Library
from django.conf import settings
import re

register = Library()
"""
{% 'menu request'%}
"""

@register.inclusion_tag('rbac/menu.html')# 执行menu函数获得值，把值menu_result放入menu.html进行渲染得到字符串，也就是页面菜单
def menu(request):
    current_url = request.path_info
    # 获取session中菜单信息，自动生成二级菜单【默认选中，默认展开】
    permission_menu_list = request.session.get(settings.PERMISSION_MENU_SESSION_KEY)
    # print(permission_menu_list)
    # [
    #     {'id': 1, 'title': '用户列表', 'url': '/users/', 'pid': None, 'menu_id': 1, 'menu__name': '菜单1'},
    #     {'id': 2, 'title': '添加列表', 'url': '/users/add/ ', 'pid': 1, 'menu_id': 1, 'menu__name': '菜单1'},
    #     {'id': 3, 'title': '删除列表', 'url': '/users/del/(\\d+)/ ', 'pid': 1, 'menu_id': 1, 'menu__name': '菜单1'},
    #     {'id': 4, 'title': '修改列表', 'url': '/users/edit/(\\d+)/ ', 'pid': 1, 'menu_id': 1, 'menu__name': '菜单1'},
    #     {'id': 5, 'title': '主机列表', 'url': '/hosts/ ', 'pid': None, 'menu_id': 1, 'menu__name': '菜单1'},
    #     {'id': 6, 'title': '添加主机', 'url': '/hosts/add/ ', 'pid': 5, 'menu_id': 1, 'menu__name': '菜单1'},
    #     {'id': 7, 'title': '删除主机', 'url': '/hosts/del/(\\d+)/ ', 'pid': 5, 'menu_id': 1, 'menu__name': '菜单1'},
    #     {'id': 8, 'title': '修改主机', 'url': '/hosts/edit/(\\d+)/', 'pid': 5, 'menu_id': 1, 'menu__name': '菜单1'}
    # ]

    per_dict = {}
    for item in permission_menu_list:
        if not item['pid']:
            per_dict[item['id']] = item
            # {
            #     1:{'id': 1, 'title': '用户列表', 'url': '/users/', 'pid': None, 'menu_id': 1, 'menu__name': '菜单1'},
            #     5:{'id': 5, 'title': '主机列表', 'url': '/hosts/ ', 'pid': None, 'menu_id': 1, 'menu__name': '菜单1'},
            #  }
    for item in permission_menu_list:
        reg = settings.REX_FORMAT % (item['url'],)
        if not re.match(reg, current_url):
            continue  # 没有匹配成功继续
        # 匹配成功
        if item['pid']:  # 如果pid不为空，为真
            per_dict[item['pid']]['active'] = True  # pid的大字典里面加入'active': True
        else:
            item['active'] = True
    # print(per_dict)
    # {
    #     1: {'id': 1, 'title': '用户列表', 'url': '/users/', 'pid': None, 'menu_id': 1, 'menu__name': '菜单1', 'active': True},
    #     5: {'id': 5, 'title': '主机列表', 'url': '/hosts/ ', 'pid': None, 'menu_id': 1, 'menu__name': '菜单1'}
    # }

    # 菜单
    menu_result = {}
    for item in per_dict.values():
        # print(item)
        # {'id': 5, 'title': '主机列表', 'url': '/hosts/', 'pid': None, 'menu_id': 1, 'menu__name': '菜单1'}
        # {'id': 1, 'title': '用户列表', 'url': '/users/', 'pid': None, 'menu_id': 1, 'menu__name': '菜单1', 'active': True}
        # {'id': 10, 'title': 'xx列表', 'url': '/hosts/', 'pid': None, 'menu_id': 2, 'menu__name': '菜单2'}
        menu_id = item['menu_id']
        if menu_id in menu_result:
            temp = {'id': item['id'], 'title': item['title'], 'url': item['url'], 'active': item.get('active', False)}
            menu_result[menu_id]['chilren'].append(temp)
            if item.get('active', False):
                menu_result[menu_id]['active'] = item.get('active', False)
        else:
            menu_result[menu_id] = {
                'menu__name': item['menu__name'],
                'active': item.get('active', False),
                'chilren': [
                    {'id': item['id'], 'title': item['title'], 'url': item['url'], 'active': item.get('active', False)}
                ]
            }
    print(menu_result)
    return {'menu_result':menu_result}